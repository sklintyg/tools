#!/bin/bash

# Source code provided to directory
S2I_SOURCE_DIR=${S2I_SOURCE_DIR-"/tmp/src"}

# Clean home for test run user (unknown uid)
export HOME=/tmp/nohome

# Setup build nev
export JAVA_TOOL_OPTIONS="$JAVA_TOOL_OPTIONS \
-DbaseUrl=$TARGET_URL \
-Dprotractor.env=test-pipeline \
-DbuildVersion=$BUILD_VERSION \
-DinfraVersion=$INFRA_VERSION \
-DcommonVersion=$COMMON_VERSION \
-Dfile.encoding=UTF-8"

# .gradle stuff are in /tmp
export GRADLE_USER_HOME=/tmp/.gradle

# runs one test
function testrun() {
    ARGS="$1"
    [ "$ARGS" = "fitnesseTest" ] && ARGS="$ARGS -PfileOutput -PoutputFormat=html"
    [ "$ARGS" = "restAssuredTest" ] && ARGS="$ARGS -x processResources"
    echo "---> Testing application with GRADLE_ARGS=$ARGS"
    (cd $S2I_SOURCE_DIR; ./gradlew --no-daemon $ARGS)
    ERR=$?
    return $ERR
}

# saves result report
function save_report() {
    SRC="${1}"
    DST="${REPORT_DIR}/${2}/${2}.html"
    echo "---> Save report $SRC as $DST"
    if [ -f $SRC ]; then
        DIR=$(dirname $DST)
        cp -r $(dirname $SRC) $DIR
        cp ${SRC} ${DST}
    fi
}

# loop through all tests
if [ $# -gt 1  ] && [ "$1" = "testrun" ]; then
    echo "---> User $(id) home is $HOME"
    echo "---> Report dir is $REPORT_DIR"
    mkdir -p $REPORT_DIR
    RESULT=SUCCESS

    shift
    TESTS=(${*/,/ })
    for TEST in ${TESTS[*]}
    do
        testrun $TEST
        [ $? -ne 0 ] && RESULT=FAILED
        case "$TEST" in
            "restAssuredTest")
                save_report ${S2I_SOURCE_DIR}/web/build/reports/tests/$TEST/index.html $TEST
                ;;
            "protractorTest")
                save_report ${S2I_SOURCE_DIR}/test/reports/index.html $TEST
                ;;
            "fitnesseTest")
                save_report ${S2I_SOURCE_DIR}/test/fitnesse-results.html $TEST
                ;;
        esac
    done

    # Report back
    echo "---> Done, report back status $RESULT to $CALLBACK_URL"
    curl -X POST -k -d $RESULT $CALLBACK_URL
else
    $(dirname "$0")/usage
fi